/* Autogenerated file. Do not edit manually. */
import fs from "fs";
import path from "path";
import { ethers } from "ethers";

import { DmailInterface } from "../types/ethers-v6/Dmail/Dmail";
import { EchoDexSmartRouterInterface } from "../types/ethers-v6/EchoDexSmartRouter/EchoDexSmartRouter";
import { Erc20Interface } from "../types/ethers-v6/Erc20/Erc20";
import { LineaBankCoreInterface } from "../types/ethers-v6/LineaBankCore/LineaBankCore";
import { LineaBankLabDistributorInterface } from "../types/ethers-v6/LineaBankLabDistributor/LineaBankLabDistributor";
import { PancakeFactoryInterface } from "../types/ethers-v6/PancakeFactory/PancakeFactory";
import { PancakeQuoteInterface } from "../types/ethers-v6/PancakeQuote/PancakeQuote";
import { PancakeSwapRouterInterface } from "../types/ethers-v6/PancakeSwapRouter/PancakeSwapRouter";
import { SyncswapClassicPoolFactoryInterface } from "../types/ethers-v6/SyncswapClassicPoolFactory/SyncswapClassicPoolFactory";
import { SyncswapRouterInterface } from "../types/ethers-v6/SyncswapRouter/SyncswapRouter";
import { VelocoreFactoryInterface } from "../types/ethers-v6/VelocoreFactory/VelocoreFactory";
import { VelocoreVaultInterface } from "../types/ethers-v6/VelocoreVault/VelocoreVault";
import { WoofiRouterInterface } from "../types/ethers-v6/WoofiRouter/WoofiRouter";

type ContractRec = {
  Dmail: DmailInterface;
  EchoDexSmartRouter: EchoDexSmartRouterInterface;
  Erc20: Erc20Interface;
  LineaBankCore: LineaBankCoreInterface;
  LineaBankLabDistributor: LineaBankLabDistributorInterface;
  PancakeFactory: PancakeFactoryInterface;
  PancakeQuote: PancakeQuoteInterface;
  PancakeSwapRouter: PancakeSwapRouterInterface;
  SyncswapClassicPoolFactory: SyncswapClassicPoolFactoryInterface;
  SyncswapRouter: SyncswapRouterInterface;
  VelocoreFactory: VelocoreFactoryInterface;
  VelocoreVault: VelocoreVaultInterface;
  WoofiRouter: WoofiRouterInterface;
};

const getEthersInterface = <C extends keyof ContractRec>(name: C) => {
  const abiPath = path.join("./src/abi/sources/", `${name}.json`);

  const abiStr = fs.readFileSync(abiPath, { encoding: "utf-8" });

  const contract = new ethers.Interface(
    abiStr,
  ) as unknown as ContractRec[typeof name];

  return contract;
};

export default getEthersInterface;
