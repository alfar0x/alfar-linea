/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  PancakeFactory,
  PancakeFactoryInterface,
} from "../PancakeFactory";

const _abi = [
  {
    type: "function",
    name: "getPool",
    constant: true,
    stateMutability: "view",
    payable: false,
    inputs: [
      {
        type: "address",
        name: "",
      },
      {
        type: "address",
        name: "",
      },
      {
        type: "uint24",
        name: "",
      },
    ],
    outputs: [],
  },
] as const;

export class PancakeFactory__factory {
  static readonly abi = _abi;
  static createInterface(): PancakeFactoryInterface {
    return new Interface(_abi) as PancakeFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PancakeFactory {
    return new Contract(address, _abi, runner) as unknown as PancakeFactory;
  }
}
