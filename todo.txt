використати alfar-helpers, створити папку scripts та робити по стандартій структурі
видалити папку git, створити новий репо, додати deprecated в alfar-linea

зчитуються операції
на увімкнутих чейнах перевіряються та відображаються баланси
спочатку перевірка нативного, якщо режим рескю, то перевірка не нативного, далі вимкнення чейну для гаманця
фільтрація валідних операцій:
if balance<min - відобразити сповіщення про поповнення
else if min<=balance<minRescue - залишаються тільки rescue операції,
  якщо ні одна з них не валідна на акаунті - юзаються всі операції
else залишаються всі операції

валідація операцій для 2 варіанту
якщо це redeem перевірити checkIsRedeemAvailable
якщо це свап перевірити checkIsSwapAvailable

з відфільтрованих операцій створюється роут

було:
transaction - транза
step - список транз
action - взаємодія з веб3 через steps
operation - обгорнутий action з аргументами (токени і тд)
route - логічний ланцюг operations (свап-свап, свап-пул-свап і тд)
task - тримає в пам*яті теперішній route

стало:
transaction - транза
action - повертає масив транз, приймає токени, чейни і тд з якими можна працювати
  кожен action має функцію isAvailable, яка приймає акаунт і повертає чи доступно
operation - це ідентифікатори ті що у файлі, вони парсяться в об*єкти, щоб можна було з них зробити роут
route - приймає окремо типізовані (swap, lend, redeem) actions, регулює правила взаємодії між ними та створює список operations (task)
task - тримає в пам*яті чергу operations для акаунту


isProxyRandom налаштування замість всього proxy об*єкту, додати http, посилання на зміну ip додати у файл


є actions, swap - приймає 2 токени, lend приймає токен і тд
є список увімкнутих екшнс
для кожного акаунту потрібно придумати задачу
задача може бути рескю або звичайна
спочатку чейни перевіряються на баланс normal, rescue, insufficient,
по чейнам insufficient пишеться повідомлення в консоль
по чейнам rescue всі задачі перемішуються і шукається перша доступна по is available
